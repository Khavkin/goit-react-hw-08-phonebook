{"version":3,"file":"static/js/950.4b323769.chunk.js","mappings":"+PAEaA,EAAWC,EAAAA,EAAAA,GAAH,oG,oECsDrB,EA/CwB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACjBC,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,OAAQC,EAAOH,EAAPG,GAEtB,GAAmDC,EAAAA,EAAAA,MAAnD,eAAOC,EAAP,KAAmCC,EAAnC,KAAwBC,UAElBC,EAAmB,mCAAG,WAAML,GAAN,0FAElBE,EAAcF,GAAIM,SAFA,OAGxBC,EAAAA,GAAAA,QAAc,uBAHU,+CAKxBA,EAAAA,GAAAA,MAAY,kBALY,wDAAH,sDASzB,OACE,UAACZ,EAAD,YACE,SAACa,EAAA,EAAD,CAAYC,GAAI,CAAEC,MAAO,SAAzB,SAAqCZ,KACrC,SAACU,EAAA,EAAD,CAAYC,GAAI,CAAEC,MAAO,SAAzB,SAAqCX,KACrC,SAACY,EAAA,EAAD,CAASC,MAAM,iBAAiBC,UAAU,QAA1C,UACE,SAACC,EAAA,EAAD,CACEC,KAAK,QACL,aAAW,iBACX,gBAAc,OACdC,MAAM,UACNC,QAAS,WACPZ,EAAoB,CAAEL,GAAAA,GACvB,EAPH,SASGG,GACC,SAACe,EAAA,EAAD,CAAYF,MAAO,uBAAwBD,KAAM,MAEjD,SAACI,EAAA,EAAD,UAMX,E,oBC5CYC,EAAOxB,EAAAA,EAAAA,GAAH,iHC4CjB,EAtCwB,WAAO,IAAD,EACpByB,GAAeC,EAAAA,EAAAA,KAAfD,WACR,GAIIE,EAAAA,EAAAA,IAAoB,GAAI,CAAEC,MAAOH,IAJrC,IACEI,KAAMC,OADR,MACmB,GADnB,EAESC,EAFT,EAEEC,MACAxB,EAHF,EAGEA,UAGMyB,GAAWC,EAAAA,EAAAA,KAAXD,OAUR,OAFIF,GAAkBpB,EAAAA,GAAAA,MAAY,2BAGhC,gCACGH,IACC,SAACc,EAAA,EAAD,CACEF,MAAO,uBACPD,KAAM,GACNgB,YAAa,CAAEC,QAAS,QAASC,OAAQ,aAG3C7B,GAAkC,KAAb,OAARsB,QAAQ,IAARA,OAAA,EAAAA,EAAUQ,UACvB,SAACd,EAAD,oBAlByB,WAC7B,IAAMe,EAAWN,EAAOO,oBAExB,OAAOV,EAASG,QAAO,qBAAG/B,KAAgBuC,cAAcC,SAASH,EAA1C,GACxB,CAeQI,UADH,aACG,EAA0BC,KAAI,SAAA3C,GAAO,OACpC,SAAC,EAAD,CAAkCA,QAASA,GAArBA,EAAQG,GADM,QAO/C,C,2BC1CGyC,EAAyBC,EAAQ,MAIrCC,EAAQ,OAAU,EAClB,IAAIC,EAAiBH,EAAuBC,EAAQ,OAChDG,EAAcH,EAAQ,KACtBI,GAAW,EAAIF,EAAeG,UAAuB,EAAIF,EAAYG,KAAK,OAAQ,CACpFC,EAAG,gGACD,yBACJN,EAAQ,EAAUG,C","sources":["components/ContactListItem/ContactListItem.styled.js","components/ContactListItem/ContactListItem.jsx","Pages/Contacts/Contacts.styled.js","Pages/Contacts/Contacts.jsx","../node_modules/@mui/icons-material/DeleteOutlineOutlined.js"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  /* padding: 5px; */\n`;\n","import { ListItem } from './ContactListItem.styled';\nimport PropTypes from 'prop-types';\n\nimport { useDeleteContactMutation } from 'api/swagger-api';\nimport { ClipLoader } from 'react-spinners';\nimport DeleteOutlineOutlinedIcon from '@mui/icons-material/DeleteOutlineOutlined';\nimport { IconButton, Tooltip, Typography } from '@mui/material';\nimport { toast } from 'react-toastify';\n\nconst ContactListItem = ({ contact }) => {\n  const { name, number, id } = contact;\n\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  const handleOnDeleteClick = async id => {\n    try {\n      await deleteContact(id).unwrap();\n      toast.success('Deleted successfuly');\n    } catch (error) {\n      toast.error('Deleting error');\n    }\n  };\n\n  return (\n    <ListItem>\n      <Typography sx={{ width: '200px' }}>{name}</Typography>\n      <Typography sx={{ width: '200px' }}>{number}</Typography>\n      <Tooltip title=\"Delete Contact\" placement=\"right\">\n        <IconButton\n          size=\"small\"\n          aria-label=\"delete contact\"\n          aria-haspopup=\"true\"\n          color=\"inherit\"\n          onClick={() => {\n            handleOnDeleteClick({ id });\n          }}\n        >\n          {isDeleting ? (\n            <ClipLoader color={'primary.contrastText'} size={14} />\n          ) : (\n            <DeleteOutlineOutlinedIcon />\n          )}\n        </IconButton>\n      </Tooltip>\n    </ListItem>\n  );\n};\n\nContactListItem.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }),\n};\n\nexport default ContactListItem;\n","import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  margin: 0;\n  padding: 30px;\n  width: 600px;\n  list-style: disc;\n  margin: 0 auto;\n`;\n","import { useGetContactsQuery } from 'api/swagger-api';\nimport ContactListItem from 'components/ContactListItem/ContactListItem';\nimport { useFilter } from 'components/FilterContext/FilterContext';\nimport { UseAuth } from 'hooks/useAuth';\nimport { ClipLoader } from 'react-spinners';\nimport { List } from './Contacts.styled';\nimport { toast } from 'react-toastify';\n\nexport const Contacts = () => {\n  const { isLoggedIn } = UseAuth();\n  const {\n    data: contacts = [],\n    error: errorGetContacts,\n    isLoading,\n  } = useGetContactsQuery('', { skip: !isLoggedIn });\n\n  const { filter } = useFilter();\n\n  const selectFilteredContacts = () => {\n    const filterLC = filter.toLocaleLowerCase();\n\n    return contacts.filter(({ name }) => name.toLowerCase().includes(filterLC));\n  };\n\n  if (errorGetContacts) toast.error('Error getting contacts');\n\n  return (\n    <>\n      {isLoading && (\n        <ClipLoader\n          color={'primary.contrastText'}\n          size={50}\n          cssOverride={{ display: 'block', margin: '0 auto' }}\n        />\n      )}\n      {!isLoading && contacts?.length !== 0 && (\n        <List>\n          {selectFilteredContacts()?.map(contact => (\n            <ContactListItem key={contact.id} contact={contact} />\n          ))}\n        </List>\n      )}\n    </>\n  );\n};\n\nexport default Contacts;\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM8 9h8v10H8V9zm7.5-5-1-1h-5l-1 1H5v2h14V4h-3.5z\"\n}), 'DeleteOutlineOutlined');\nexports.default = _default;"],"names":["ListItem","styled","contact","name","number","id","useDeleteContactMutation","deleteContact","isDeleting","isLoading","handleOnDeleteClick","unwrap","toast","Typography","sx","width","Tooltip","title","placement","IconButton","size","color","onClick","ClipLoader","DeleteOutlineOutlined","List","isLoggedIn","UseAuth","useGetContactsQuery","skip","data","contacts","errorGetContacts","error","filter","useFilter","cssOverride","display","margin","length","filterLC","toLocaleLowerCase","toLowerCase","includes","selectFilteredContacts","map","_interopRequireDefault","require","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d"],"sourceRoot":""}