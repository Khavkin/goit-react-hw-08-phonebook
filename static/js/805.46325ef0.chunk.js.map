{"version":3,"file":"static/js/805.46325ef0.chunk.js","mappings":"gZAuBMA,EAAmBC,EAAAA,GAAW,CAClCC,MAAOD,EAAAA,KAAaE,QAHpB,4EAGwC,sBAAsBC,WAC9DC,SAAUJ,EAAAA,KACPK,IAAI,EAAG,sCACPH,QAAQ,QAAS,8BACjBA,QAAQ,QAAS,wCAGjBC,aA8GL,EA3GyB,WACvB,OAA0CG,EAAAA,EAAAA,MAA1C,eAAOC,EAAP,KAA2BC,EAA3B,KAAgBC,UACVC,GAAWC,EAAAA,EAAAA,MACTC,GAAiBC,EAAAA,EAAAA,KAAjBD,aAEFE,GAASC,EAAAA,EAAAA,IAAU,CAEvBC,cAAe,CAAEf,MAAO,GAAIG,SAAU,IACtCL,iBAAkBA,EAClBkB,SAAS,WAAD,wBAAE,WAAOC,EAAP,iFAAiBC,EAAjB,EAAiBA,UAAjB,kBAEAZ,EAAMW,GAAQE,SAFd,OAGND,IACAT,EAAS,aAJH,gDAMW,MAAjB,KAAMW,OACFC,EAAAA,GAAAA,MAAY,6BACZA,EAAAA,GAAAA,MAAY,gBAChBC,QAAQC,IAAR,MATM,yDAAF,qDAAC,KAcX,OACE,+BACIZ,IACA,UAACa,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,WACE,SAACC,EAAA,GAAD,KACA,UAACC,EAAA,EAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAACC,EAAA,EAAD,CAAQL,GAAI,CAAEM,EAAG,EAAGC,QAAS,kBAA7B,UACE,SAACC,EAAA,EAAD,OAEF,SAACC,EAAA,EAAD,CAAYb,UAAU,KAAKc,QAAQ,KAAnC,sBAGA,UAACX,EAAA,EAAD,CACEH,UAAU,OACVT,SAAUH,EAAO2B,aACjBC,YAAU,EACVZ,GAAI,CAAEa,GAAI,GAJZ,WAME,SAACC,EAAA,EAAD,CACEC,OAAO,SACP1C,UAAQ,EACR2C,WAAS,EACTC,GAAG,QACHC,MAAM,gBACNC,KAAK,QACLC,aAAa,QACbC,WAAS,EACTC,MAAOtC,EAAOI,OAAOjB,MACrBoD,SAAUvC,EAAOwC,aACjBC,MAAOzC,EAAO0C,QAAQvD,OAASwD,QAAQ3C,EAAO4C,OAAOzD,OACrD0D,WAAY7C,EAAO0C,QAAQvD,OAASa,EAAO4C,OAAOzD,SAEpD,SAAC2C,EAAA,EAAD,CACEC,OAAO,SACP1C,UAAQ,EACR2C,WAAS,EACTG,KAAK,WACLD,MAAM,WACNY,KAAK,WACLb,GAAG,WACHG,aAAa,mBACbE,MAAOtC,EAAOI,OAAOd,SACrBiD,SAAUvC,EAAOwC,aACjBC,MACEzC,EAAO0C,QAAQpD,UAAYqD,QAAQ3C,EAAO4C,OAAOtD,UAEnDuD,WAAY7C,EAAO0C,QAAQpD,UAAYU,EAAO4C,OAAOtD,YAGvD,SAACyD,EAAA,EAAD,CACED,KAAK,SACLd,WAAS,EACTN,QAAQ,YACRV,GAAI,CAAEa,GAAI,EAAGmB,GAAI,GAJnB,SAMGtD,GACC,SAACuD,EAAA,EAAD,CAAYC,MAAO,uBAAwBC,KAAM,KAEjD,aAGJ,SAACC,EAAA,GAAD,CAAMC,WAAS,EAAf,UACE,SAACD,EAAA,GAAD,CAAME,MAAI,EAAV,UACE,SAAC,KAAD,CAAMC,GAAG,YAAY7B,QAAQ,QAA7B,SACG,iDAWpB,C","sources":["Pages/Login/Login.jsx"],"sourcesContent":["import {\n  Avatar,\n  Box,\n  Button,\n  Container,\n  CssBaseline,\n  Grid,\n  TextField,\n  Typography,\n} from '@mui/material';\nimport LockOutlinedIcon from '@mui/icons-material/LockOutlined';\nimport * as Yup from 'yup';\n\nimport { useFormik } from 'formik';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useLoginMutation } from 'api/swagger-api';\nimport { UseAuth } from 'hooks/useAuth';\nimport { ClipLoader } from 'react-spinners';\nimport { toast } from 'react-toastify';\n\nconst mailRegExp =\n  /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/;\n\nconst validationSchema = Yup.object({\n  email: Yup.string().matches(mailRegExp, 'Not a proper email').required(),\n  password: Yup.string()\n    .min(8, 'Password must be 8 characters long')\n    .matches(/[0-9]/, 'Password requires a number')\n    .matches(/[a-z]/, 'Password requires a lowercase letter')\n    // .matches(/[A-Z]/, 'Password requires an uppercase letter')\n    // .matches(/[^\\w]/, 'Password requires a symbol')\n    .required(),\n});\n\nexport const LoginForm = () => {\n  const [login, { isLoading: isLogging }] = useLoginMutation();\n  const navigate = useNavigate();\n  const { isRefreshing } = UseAuth();\n\n  const formik = useFormik({\n    // initialValues: { email: 'test1836@mail.com', password: 'examplepwd12345' },\n    initialValues: { email: '', password: '' },\n    validationSchema: validationSchema,\n    onSubmit: async (values, { resetForm }) => {\n      try {\n        await login(values).unwrap();\n        resetForm();\n        navigate('/contacts');\n      } catch (error) {\n        error.status === 400\n          ? toast.error('Invalid Email ro Password')\n          : toast.error('Server Error');\n        console.log(error);\n      }\n    },\n  });\n\n  return (\n    <>\n      {!isRefreshing && (\n        <Container component=\"main\" maxWidth=\"xs\">\n          <CssBaseline />\n          <Box\n            sx={{\n              marginTop: 8,\n              display: 'flex',\n              flexDirection: 'column',\n              alignItems: 'center',\n            }}\n          >\n            <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign in\n            </Typography>\n            <Box\n              component=\"form\"\n              onSubmit={formik.handleSubmit}\n              noValidate\n              sx={{ mt: 1 }}\n            >\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                autoFocus\n                value={formik.values.email}\n                onChange={formik.handleChange}\n                error={formik.touched.email && Boolean(formik.errors.email)}\n                helperText={formik.touched.email && formik.errors.email}\n              />\n              <TextField\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                value={formik.values.password}\n                onChange={formik.handleChange}\n                error={\n                  formik.touched.password && Boolean(formik.errors.password)\n                }\n                helperText={formik.touched.password && formik.errors.password}\n              />\n\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                sx={{ mt: 3, mb: 2 }}\n              >\n                {isLogging ? (\n                  <ClipLoader color={'primary.contrastText'} size={14} />\n                ) : (\n                  'Sign In'\n                )}\n              </Button>\n              <Grid container>\n                <Grid item>\n                  <Link to=\"/register\" variant=\"body2\">\n                    {\"Don't have an account? Sign Up\"}\n                  </Link>\n                </Grid>\n              </Grid>\n            </Box>\n          </Box>\n          {/* <Copyright sx={{ mt: 8, mb: 4 }} /> */}\n        </Container>\n      )}\n    </>\n  );\n};\n\nexport default LoginForm;\n"],"names":["validationSchema","Yup","email","matches","required","password","min","useLoginMutation","login","isLogging","isLoading","navigate","useNavigate","isRefreshing","UseAuth","formik","useFormik","initialValues","onSubmit","values","resetForm","unwrap","status","toast","console","log","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","LockOutlined","Typography","variant","handleSubmit","noValidate","mt","TextField","margin","fullWidth","id","label","name","autoComplete","autoFocus","value","onChange","handleChange","error","touched","Boolean","errors","helperText","type","Button","mb","ClipLoader","color","size","Grid","container","item","to"],"sourceRoot":""}